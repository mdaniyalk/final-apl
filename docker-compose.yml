version: '3'
services:
  user-service:
    build: ./user-service
    ports:
      - "5001:5001"
    depends_on:
      - userdb
    environment:
      - MONGO_URI=mongodb://userdb:27017/users
    networks:
      - app_network
    deploy:
      replicas: 1  # Replicating user service for high availability
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  catalog-service:
    build: ./catalog-service
    ports:
      - "5002:5002"
    depends_on:
      - catalogdb
      - redis
    environment:
      - MONGO_URI=mongodb://catalogdb:27017/catalog
    networks:
      - app_network
    deploy:
      replicas: 1  # Replicating catalog service for high availability
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  order-service:
    build: ./order-service
    ports:
      - "5003:5003"
    depends_on:
      - orderdb
      - user-service
      - catalog-service
    environment:
      - MONGO_URI=mongodb://orderdb:27017/orders
    networks:
      - app_network
    deploy:
      replicas: 1  # Replicating order service for high availability
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  userdb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - userdb_data:/data/db
    networks:
      - app_network
    deploy:
      replicas: 1  # Typically, MongoDB is not replicated at the container level, but handled by MongoDB replication

  catalogdb:
    image: mongo:5.0
    ports:
      - "27018:27017"
    volumes:
      - catalogdb_data:/data/db
    networks:
      - app_network
    deploy:
      replicas: 1

  orderdb:
    image: mongo:5.0
    ports:
      - "27019:27017"
    volumes:
      - orderdb_data:/data/db
    networks:
      - app_network
    deploy:
      replicas: 1

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - app_network
    deploy:
      replicas: 1

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - catalog-service
      - order-service
    networks:
      - app_network
    deploy:
      replicas: 1  # Replicating the Nginx gateway for load balancing

volumes:
  userdb_data:
  catalogdb_data:
  orderdb_data:

networks:
  app_network:
    driver: bridge
